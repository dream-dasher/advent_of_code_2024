# Settings for Rust Workspace
# [Cargo Manifest Configuration Reference](https://doc.rust-lang.org/stable/cargo/reference/manifest.html#the-lints-section)

[workspace]
members = ["crates/day*"]
resolver = "3"

[workspace.package]
version = "0.1.0"
edition = "2024"
authors = ["Ethan Skowronski-Lutz"]
description = "Adventure of Code 2024"
homepage = "https://github.com/ethanmsl/advent_of_code_2024"
documentation = "https://github.com/ethanmsl/advent_of_code_2024"
repository = "https://github.com/ethanmsl/advent_of_code_2024"
keywords = ["puzzle", "fun", "advent_of_code"]
# publish = []
# license = ""
# license-file = ""

[workspace.lints.rust]
unsafe_code = "forbid"
# unused = { level = "allow", priority = -1 } # (early) ¡DEVELOPMENT-ONLY!
# dead_code = "allow"                         # (early) ¡DEVELOPMENT-ONLY!

[workspace.lints.clippy]
allow_attributes = "warn"

[profile.release]
codegen-units = 1
lto = true        # "fat"

# for use with perf-analysis tools like `samply`
[profile.profiling]
inherits = "release"
debug = true

[workspace.dependencies]
## --Diagnostics--
tracing = { version = "0.1.41", features = [] }
#                  "release_max_level_warn"^"release_max_level_off"
tracing-appender = "0.2.3"
tracing-error = "0.2.1"
tracing-subscriber = { version = "0.3.19", features = ["env-filter"] }
tracing-timing = "0.6.0"
tracing-tree = "0.4.0"


## --Env & Files--
include_dir = "0.7.4"

## --Ergonomics--
bon = "3.2.0"
derive_more = { version = "1.0.0", features = ["full"] }
indoc = "2.0.5"
itertools = "0.13.0"
# nestify = "0.3.3"
# strum = { version = "0.26.3", features = ["derive", "phf"] }

## --Interface--
### - CLI -
clap = { version = "4", features = [
    "env",
    "cargo",
    "derive",
    "string",
    "unicode",
    "wrap_help",
] }
clap-verbosity-flag = "3.0.1"
# dialoguer = "0.11"
owo-colors = "4"
### - egui -
eframe = { version = "0.30", default-features = false, features = [
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    "persistence",   # Enable restoring app state when restarting the app.
    "wayland",       # To support Linux (and CI)
] }
egui = "0.30"

## --Math--
rand = "0.8.5"

## --Other--
jiff = { version = "0.1.16", features = ["js", "logging", "serde"] }
#                                           "tzdb-bundle-always" ^

## --Parsing--
regex = { version = "1.11.1", features = ["logging"] }
serde = { version = "1.0.215", features = ["derive"] }
serde_json = "1.0.133"
## --Performance--
# dashmap = { version = "6.1.0", features = ["serde", "rayon", "arbitrary"] }
# regex-automata = "0.4.9"
rayon = "1.10.0"
# tinyvec = { version = "1.8.0", features = ["serde"] }


# Dev-Dependencies
pretty_assertions = "1.4.1"
## --Property Sample Testing--
quickcheck = "1.0.3"
quickcheck_macros = "1.0.0"
## --Test Trace-Logging--
test-log = { version = "0.2.16", features = ["trace"] }
