# Settings for Rust Workspace
# [Cargo Manifest Configuration Reference](https://doc.rust-lang.org/stable/cargo/reference/manifest.html#the-lints-section)

[workspace]
members = ["day*"]
resolver = "3"

[workspace.package]
version = "0.1.0"
edition = "2024"
authors = ["Ethan Skowronski-Lutz"]
description = "Adventure of Code 2024"
homepage = "https://github.com/ethanmsl/advent_of_code_2024"
documentation = "https://github.com/ethanmsl/advent_of_code_2024"
repository = "https://github.com/ethanmsl/advent_of_code_2024"
keywords = ["puzzle", "fun", "advent_of_code"]
# publish = []
# license = ""
# license-file = ""

[workspace.lints.rust]
unsafe_code = "forbid"
# unused = { level = "allow", priority = -1 } # (early) ¡DEVELOPMENT-ONLY!
# dead_code = "allow"                         # (early) ¡DEVELOPMENT-ONLY!

[workspace.lints.clippy]
allow_attributes = "warn"

# # Reference Default for Release
# [profile.release]
# opt-level = 3
# debug = false
# split-debuginfo = '...'  # Platform-specific.
# strip = "none"
# debug-assertions = false
# overflow-checks = false
# lto = false
# panic = 'unwind'
# incremental = false
# codegen-units = 16
# rpath = false


# BINFILE='day04'
# BINARGS='2 full'
# clear;
# echo " \
# cargo build;
# cargo build --release;
# cargo build --profile=profiling;
# cargo build --profile=release_alt_thin;
# cargo build --profile=release_alt_fat;
# cargo build --profile=release_alt_s;
# cargo build --profile=release_alt_z;
# hyperfine \
# '            ./target/debug/BIN_FILE_NAME BIN_ARGS' \
# '        ./target/profiling/BIN_FILE_NAME BIN_ARGS' \
# '          ./target/release/BIN_FILE_NAME BIN_ARGS' \
# ' ./target/release_alt_thin/BIN_FILE_NAME BIN_ARGS' \
# '  ./target/release_alt_fat/BIN_FILE_NAME BIN_ARGS' \
# '    ./target/release_alt_s/BIN_FILE_NAME BIN_ARGS' \
# '    ./target/release_alt_z/BIN_FILE_NAME BIN_ARGS' \
# --warmup=3 --shell=none;
# fd --unrestricted          'BIN_FILE_NAME$' -t x |
# xargs eza --long --numeric --all --classify --header --icons --sort=type --time-style=relative --git --git-repos --sort=size;" |
# sd 'BIN_FILE_NAME' "$BINFILE" |
# sd 'BIN_ARGS' "$BINARGS" |
# zsh

# for use with perf-analysis tools like `samply`
[profile.profiling]
inherits = "release"
debug = true

[profile.release_alt_s]
inherits = "release"
opt-level = "s"
panic = "abort"
debug = false
debug-assertions = false
overflow-checks = false
codegen-units = 1

[profile.release_alt_z]
inherits = "release"
opt-level = "z"
panic = "abort"
debug = false
debug-assertions = false
overflow-checks = false
codegen-units = 1

[profile.release_alt_thin]
inherits = "release"
opt-level = 3
panic = "abort"
debug = false
debug-assertions = false
overflow-checks = false
lto = "thin"
codegen-units = 1

[profile.release_alt_fat]
inherits = "release"
opt-level = 3
panic = "abort"
debug = false
debug-assertions = false
overflow-checks = false
lto = "fat"
codegen-units = 1

[workspace.dependencies]
## --CLI--
clap = { version = "4", features = [
    "env",
    "derive",
    "string",
    "unicode",
    "wrap_help",
] }
dialoguer = "0.11"
owo-colors = "4"
indicatif = "0.17"
## --Diagnostics--
tracing = "0.1.41"
tracing-tree = { version = "0.4.0", features = ["time"] }
tracing-subscriber = { version = "0.3.19", features = [
    "chrono",
    "env-filter",
    "tracing-log",
    "json",
] }
tracing-error = "0.2.1"
## --General--
bon = "3.2.0"
derive_more = { version = "1.0.0", features = ["full"] }
indoc = "2.0.5"
itertools = "0.13.0"
## --Math--
chrono = { version = "0.4.38", features = ["serde"] }
rand = "0.8.5"
## --Parsing--
regex = { version = "1.11.1", features = ["logging"] }
serde = { version = "1.0.215", features = ["derive"] }
serde_json = "1.0.133"
# Dev-Dependencies
## --Property Sample Testing--
quickcheck = "1.0.3"
quickcheck_macros = "1.0.0"
## --Test Trace-Logging--
test-log = { version = "0.2.16", features = ["trace"] }
